nl -s "prefix_" a.txt | cut -c7-
echo "$string" | nl -ba -s') '
history -r file.txt
LBUFFER+="$(date)"
PROMPT_COMMAND='echo "$(date +"%Y/%m/%d (%H:%M)") $(history 1 |cut -c 7-)" >> /tmp/trace'
rsync -chavzP --stats user@remote.host:/path/to/copy /path/to/local/storage
rsync -chavzP --stats /path/to/copy user@host.remoted.from:/path/to/local/storage
rsync -aqz _vim/ ~/.vim
rsync -aqz _vimrc ~/.vimrc
rsync -aPSHiv remote:directory .
rsync -avz --rsh='ssh -p3382' source root@remote_server_name:/opt/backups
rsync -avz --chmod=ug=rwx --chmod=o=rx -e ssh src dest
rsync -avz -e "ssh -p $portNumber" user@remoteip:/path/to/files/ /local/path/
find /path/to/directory/* -maxdepth 0 -type d -printf "%P\n" -exec sudo tar -zcpvf {}.tar.gz {} \;
tar czvf mytarfile.tgz `find . -mtime -30`
rsync -avR $i /iscsi;
sudo find / -name file.txt
find . -name "*.java" -exec cp {} {}.bk \;
SUM=$(tree | md5sum)
echo -n "yourstring" |md5sum
grep -aR -e . /your/dir | md5sum | cut -c-32
find /path -type f -name "*.py" -exec md5sum "{}" +;
md5=$(md5sum $item | cut -f1 -d\ )
seq 100000 | paste -sd+ | bc -l
cd $(dirname $(which $0) )
find -name ‘*.lst’ -exec rename .lst a.lst {} \;
chown -v root:root /path/to/yourapp
find /path/to/directory -type f -exec chmod 644 {} +
chown -v root:root /path/to/yourapp
sudo chown nobody /var/www/html/mysite/images/
find dir_to_start -not -name "file_to_exclude"  -print0 | xargs -0 chown owner
sudo chown `whoami` /vol
find root_dir -type d -exec chmod 555 {} \;
find /path/to/someDirectory -type f -print0 | xargs -0 sudo chmod 644
cd /nfs//office/ && find . -name '.user.log'
cd -P xyz
cd $(dirname $(which ssh));
find . -type f -iname "*.txt" -print | xargs grep "needle"
ssh -q $HOST [[ -f $FILE_PATH ]] && echo "File exists" || echo "File does not exist";
comm -23 <(sort subset | uniq) <(sort set | uniq) | head -1
alias | grep my_previous_alias
FOO=$(echo "Hello world" | gzip | base64)
gzip */*.txt
echo *.txt | xargs gzip -9
find . -name '*test*' -exec cat {} \;
scp -v user@remotehost:/location/KMST_DataFile_*.kms
yes "Hidden" | dd of=/dev/sdb
yes 'UUUUUUUUUUUUUUUUU' | tr -d '\n' > /dev/to/overwrite
rsync --iconv=UTF-8,UTF-8-MAC /home/username/path/on/server/ 'username@your.ip.address.here:/Users/username/path/on/machine/'
find . -name "*c" -print0 | xargs -0 -n1 cp xyz.c
rsync --sparse sparse-1 sparse-1-copy
find projects/ -name '*.php' -print | cpio -pdm copy/
find /source_path -name \*.data  | while read -r filename; do cp "${filename}" "$(printf "%s\n" "${filename}" | sed "s/^.*[/]\(category[^/]*\)[/]\(.*[.]data\)$/\/target_path\/\1_\2/")"; done
find . -type f -iname "*.flac" -o -print0 -iname "*.mp3" -print0 -o -iname "*.wav" -print0 -o -iname "*.aac" -print0 -o -iname "*.wma" -print0 | while read -d $'\0' file; do cp -ruv "$file" "/media/wd/network_sync/music/$file"; done
find -print0 | sort -z | cpio -pdv0 ../new
find . -type f -not -path '*/exlude-path/*' -exec cp --parents '{}' '/destination/' \;
find  /home/mine -iname "*.png" -printf "%P\n " | xargs  -I % -n1 cp %  /home/mine/pngcoppies/copy%
find . -name "*.java" -print0 | xargs -0 -J % cp % destinationFolder
find /path -type f -name '*~' -print0 | xargs -0 -I % cp -a % ~/backups
ls | xargs -n 1 cp -i file.dat
echo ./fs*/* | xargs -n 1 cp test
scp -C file remote:
cp --remove-destination `readlink bar.pdf` bar.pdf
any_command_what_produces_relative_path_names | cpio -pamVd /new/parent/dir
chown --reference=file.txt -- "$tempfile"
find /usr/src -name "*.html" | xargs grep -l foo | wc -l
jobs | wc -l
find . -maxdepth 1 -type f -printf '%TY-%Tm\n' | sort | uniq -c
find . -name '*.php' -type f | sort | xargs wc -l
wc -l file
wc -l /dir/file.txt
find . \( -name "*.c" -or -name "*.cpp" -or -name "*.h" -or -name "*.m" \) -print0 | xargs -0 wc
find . -name "*.java" -print0 | xargs -0 wc
diff file1 file2 | grep ^[\>\<] | wc -l
find -name file1 | wc -l
git ls-files | grep "\.java$" | xargs wc -l
git ls-files | sed 's/ /\\ /g' | grep -E "\.*(swift$|mm$)" | xargs wc -l
watch "ls /proc/$PYTHONPID/fd | wc -l"
ln -s $(readlink -f $origlink) $newlink
ssh -N -L 2222:remote.example.com:22 bridge.example.com&
ln -s "$file"
sudo ln -s /usr/include/oracle/11.2/client $ORACLE_HOME/include
ln -s `pwd`/current/app/webroot public_html
ln -s "/Applications/Sublime Text 2.app/Contents/SharedSupport/bin/subl" ~/bin/subl
sudo ln -s /usr/bin/perl /usr/local/bin/perl`echo -e '\r'`
find $directory -type -f -execdir zip -j $ZipFileName {}\;
tar czfP backup.tar.gz /path/to/catalog
touch filename_`/bin/date +%Y%m%d%H%M%S`.txt
echo -e "$correctFilePathAndName" | xargs touch
find test -path 'test/icecream/cupcake/*' -o -path 'test/mtndew/livewire/*' | cpio -padluv test-keep
find /your/project -maxdepth 1 ! -name "CONFIGFILE" -exec ln -s \{\} ./ \;
find /your/project -type f ! -name 'CONFIGFILE' -exec ln -s \{\} ./ \;
find dir -name \*.jpg -print0 | xargs -0 -N1 ln -s
script2=`mktemp /tmp/.script.XXXXXX`;
mktemp -d -p /path/to/dir
COLUMN=`echo $1 | tr -d -`
find -L /usr/ports/packages -type l -exec rm -- {}	+
find .cache/chromium/Default/Cache/ -mindepth 1 -type d -size +100M -exec rm -rf {} \;
find . -maxdepth 1 -type d -empty -exec rm {} \;
find / -user edwarda -ok rm "{}" \;
find Música/* -type f -name ".*" -exec /usr/bin/rm -i {} \;
find . -delete
find -O3 "$save_path" -depth -mindepth 1 -name 'sess_*' -ignore_readdir_race -type f -cmin "+$gc_maxlifetime" -delete
find "$DIR" -type f \! -newer "$a" -exec rm {} +
find $LOCATION -name $REQUIRED_FILES -type f -mmin +360 -delete
shopt -u nullglob
echo 12345 | rev
find / -path /proc -prune -o -user <account> -ls
find $dir -type -f size +$size -print0 | xargs -0 ls -1hsS
find /home -size +100000 -ls 2>/dev/null
find . -size +10k -exec ls -l {} \;
find / -type f \( -perm -4000 -o -perm -2000 \) -exec ls -l {} \;
find /tmp -size 0 -atime +10 -exec ls -l {} \; > /tmp/checkold.txt
find . -name \*.c -print
find /path/to/dest -type d \( ! -name tmp \) -print
find /home -perm /a=x
find . -type f -name "*searched phrasse*" ! -path "./tmp/*" ! -path "./var/log/*"
find kat -printf "%f\n"
find . -not -name "*.pl"
find . ! -path *mmm*
find . -size +10k
find / -name "apache-tomcat*"
find / -group lighttpd -print
find /Users/Me/Desktop -readable
find ~ -name 'arrow*'
find /home -perm /u=r
find /dir/to/search/ -name ".*" -print
find . -name *.jpg -user nobody
cat /boot/System.map-`uname -r` | grep funcname
find /var/log -name "*.log" -print0
find / -name “*.mp3” -atime +01 -type f
find . -name '*.php' -o -name '*.xml' -o -name '*.phtml'
find . -type f print0 | sort -r
find . -type f -atime -7
find . -type f -readable
find . \( -name skipdir1 -prune , -name skipdir2 -prune -o -name "*.txt" \) -print
find /tmp/1 -iname '*.txt' -not -iname '[0-9A-Za-z]*.txt'
cal -3 12 2120
find . -name "*.html" -print | xargs -l -i wc {}
cat /boot/config-`uname -r`
which file | xargs file
file ascii.txt
find . -type l -exec ls -l {} \;
ifconfig
curl https://s3.amazonaws.com/sampletest/sample.tar.gz | gunzip | pax -r -s "/old/new/"
curl -L -C - -b "oraclelicense=accept-securebackup-cookie" -O http://download.oracle.com/otn-pub/java/jce/8/jce_policy-8.zip
curl -x http://proxy_server:proxy_port --proxy-user username:password -L http://url
curl http://www.example.com --proxy http://125.119.175.48:8909
find . -type f -iname \*.mov -printf '%h\n' | sort | uniq | xargs -n 1 -d '\n' -I '{}' echo mkdir -vp "/TARGET_FOLDER_ROOT/{}"
echo 'hi' | od -c
shopt -s execfail
ssh $USER@$SERVER "cd ${REMOTE_PATH}; mkdir -p $i" < /dev/null
ssh user@target "cd /some/directory; nohup myprogram > foo.out 2> foo.err < /dev/null"
watch -n 0.5 ls -l
ssh user@remote 'bash -s' < /path/to/commands-inc.sh
find -maxdepth 0 -name "*.sh"  -exec ./lastline.sh {} \;
cat B C D | sort | comm -2 -3 A -
echo "$url" | cut -d'/' -f1-3
cut -d: -f1 /etc/group | sort
kill -9 `cat save_pid.txt`
crontab -u $user -l 2>/dev/null | grep -v '^#'
find /var/www -name *.gif -ctime +90 -ctime -180
find  / -type d -name "project.images" -ls
find /home/you -iname "*.c" -atime -30 -type -f
find -name "*.flac" -exec ffmpeg -i {} -acodec libmp3lame -ab 128k {}.mp3 \;
find $HOME -name '*.c' -print | xargs grep -l sprintf
find . -name \*.c | xargs grep hogehoge
find /path -type f -name '*.ext' -exec my_cool_script \{\} \;
find "$musicdir" -type f -print | egrep -i '\.(mp3|aif*|m4p|wav|flac)$'
find . -iname *.page -exec ~/t.sh {} \; | sort
find ${INPUT_LOCATION}/ -name "*.pdf.marker" | xargs -I file mv file $(basename file .marker) ${OUTPUT_LOCATION}/.
find . -name "*.rb" -type f | xargs wc -l
find . -name "*.swp" > rm
find /basedir/ \( -iname '*company*' -and \( -iname '*.txt' -or -iname '*.html' \) \) -print0
find /home/wsuNID/ -name "*.txt"
find -name *.xml
find asia emea -type f -name "*gz" | while IFS= read -r fname; do printf "%s %s\n" "$fname" $(gzip -dc "$fname" | wc -l) >> file_count.txt; done
find -name "*text"
find . -name *.less
find . -name '*.sql' -exec scriptname {} +
find . \( -name 1.txt -o -name 2.txt -o -name 3.txt \) -print|xargs chmod 444
find /home/jassi/ -name "aliencoders.[0-9]+"
find /home/jassi/ -type f -name "aliencoders.[0-9]+"
find . -type f -name "*.bak" -exec rm -i {} \;
find /path/to/search/in -name 'catalina*'
find /etc -name "*.conf" -printf "%f %a, %t\n"
find / -name "*.conf"
find . -name *.cpp -o -name *.h -o -name *.java
find -name '*.css'
find /data1/realtime -mmin -60 -mmin +5 -type d
find . -type d ! -iname '*.*' | while read d; do mv $d/* .; done
find . -type d -exec sh -c 'cd -P -- "{}" && pwd -P' \;
find . -type d -delete
find . -maxdepth 1 -type d | xargs -I X mkdir '/new/directory/X'
find . -type d -atime $FTIME
find  / -type d -name "project.images" -ls
find /home/username/public_html/sites/all/themes -type d -exec chmod 750 {} +
find /home/username/public_html/themes -type d -exec chmod 750 {} +
find . -type d -exec chmod u=rwx,g=rx,o=rx {} \;
find . -type d -name “DIRNAME” -exec rm -rf {} \;
find / -empty
find / -empty
find debian/fglrx/ -name 'fglrx-libGL*'
find . -type f -name "*.tmp"  -exec rm -rf {} \;
find . -iname '*something*'
find -exec command {} +
find . -iname "*linkin park*" -exec cp -r {} /Users/tommye/Desktop/LP \;
find -regex .*sql.*
find / -name foo
find / -name foo.bar -print
find . -name testfile.txt
find . -iregex ".*packet.*" ! -type d -size +1500c
find . -user my_user -perm -u+rwx
find "$dir"
find /usr/share/doc -name README\*
find ./var/log
find /path/to/dir -type d -exec chmod 0755 '{}' \; -o -type f -exec chmod 0644 '{}' \;
find . -type f -exec stat -f "%z %N" {} \;
find -maxdepth 3
find -print0 | tr "\0" ":"
find . -xdev -print0
find /tmp/test/* -daystart -mtime -0
find $DIR/tmp/daily/ -name '*.tar.gz' | sort -n | tail -3
find . -name '*my key phrase*'
find -type f -exec grep -Hn "texthere" {} +
find sourceDir -mindepth 1
find /home/myuser -mtime +7 -print
find . -mtime -1 -prin
find . -size +10M -size -20M
find ./* -mtime +5
find . -depth \( -wholename \./\.\* \) -prune -o -print| cpio -aov > /media/caca/extract/full$date.cpio
find . -newer file
find . | sort
find . -mmin +10 -print
find -atime 0
find . — size +10 -print
find -mmin +15 -mmin -25
find ./ -type f -regex ".*\.[JPGjpg]$" | wc -l
find . -executable
find $1 \( -name "*$2" -o -name ".*$2" \) -print
find /opt -atime 20
find $HOME -mtime -2 -mtime +1
find ~/clang+llvm-3.3/bin/ -type f -exec echo basename {} \;
find ${directory} -name "${pattern}" -print0 | xargs -0 ${my_command}
find . -name "*.php" -print
find /home/dm/Video -mtime -7
find . -ctime 0 -type f
find -mtime 2
find /home -group developer
find / -group root
find $1 -type f -not -regex '.*/\..*' -exec $0 hashmove '{}' \;
find /etc -size +100k
find /somefolder -type f -name $FILE_PATTERN
find . -type f -exec grep California {} \; -print
find "`pwd`" -type f
find . -type f -exec chmod u+r-wx,g+rw-x,o-rwx {} \;
find . -type f -exec /tmp/clever.sh {} \;
find . -type f -exec chmod ug=rw,o= {} \;
find . -type f -print0 | parallel -0 -X md5sum
find . -depth -path './.*' -prune -o -print
find -type f -regex '.*\(\(error\|access\)\(_log\)?\|mod_jk\.log\)\.[0-9]+'
find . -name "*.foo" -exec somecommand "{}" \;
find . -type f \! -iregex '.\|./.git' -exec perl -i'' -pe "s/$1/$upper2/gi" {} +
find -mtime +1
find . -maxdepth 1 -not -iname file.txt
sort < <(find -printf "%T@ %p\n")
find /home -user exampleuser -mtime 7 -iname ".db"
find . -name *.xml -print0 | xargs -n 1 -0 invalid_command
find / -name foo.bar -print
find . -type d -name ".*"
grep  $USER file |nl
find /myDir -name 'log*' -and -not -name '*.bz2' -ctime +7 -exec bzip2 -zv {} \;
find . -name Makefile -print0 | xargs -0 grep -nH $ | grep :235:
find . -type f -iname '*.CR2' -print0 | xargs -0 -n 1 -P 8 -I {}
find . -type f -name "*html" | xargs tar cvf jw-htmlfiles.tar -
find $DIR -name "*.mod" -type f -exec remodup {} \;
find . -type f -exec grep -il mail
find . -type f -exec echo mv -t . {} +
find ./ -daystart -mtime -3 -type f  ! -mtime -1  -printf '%Tc %p\n'
find . –type f -mmin -10
ionice -c 3 find  . -type f -amin -1440 -mmin +1441 -not -path custom/ -print0
find . -type f -name '*some text*'
find //path/to/source/Directory -type f -exec md5sum {} + | awk '{print $0}' > Output.txt
find ~/ -type f -name "postgis-2.0.0"
find . -type f –iname stat*
find $DIR/tmp/daily/ -type f -printf "%p\n" | sort -rn | head -n 2 | xargs -I{} cp {} $DIR/tmp/weekly/
find test -type f
find ./ -name "*.sqlite"
find /  -perm /u=s
find . -perm /u=s | head
find . -name "*.txt" | xargs rm -rf
find -maxdepth 1 -iname "*.txt"
comm -3 <(printf '%s\n' */ | sed 's|/.*||' | sort) <(find */ -type d -name bin | cut -d/ -f1 | uniq)
find /home/<user> -type f -exec file {} + | grep -E "MPEG v4|EBML|Microsoft ASF|Macromedia Flash Video|WebM|Apple QuickTime movie|AVI"
find . -type f -name '*.zip' -print0 | xargs -0 tar -xzf
find . -inum 968746 -exec rm -i {} \;
find . -type f -exec perl -pi -e 's|xxx|yyy|g' {} ;
find $workspace_ts -mindepth 1 -maxdepth 1 -type d -mtime -30
find $workspace_ts -mindepth 1 -maxdepth 1 -type d -mtime +30 -print
find /home -type d -perm 777 -print -exec chmod 755 {} \;
du --max-depth=0 ./directory
find wordpress -name '*js'
find . -perm -100 -print
find /usr -name filename.txt -print
find / /usr -xdev -name document -print
find /users/tom -name "*.pl" -name "*.pm"
find . -exec sh -c 'echo {} | grep -qi /path/to/something' \; -print
find /usr/src -name '*.c' -size +100k -print
find . -newermt "5 days"
find / -atime -1 -amin +60
find -empty -type -f
find -nouser
find / -type f ! -perm 644
find ${userdir}/${i}/incoming -mtime +2 -type f -size +200557600c -exec rm {} \;
yum list | grep subversion
find -L / -samefile path/to/foo.txt
printf '%s' "$pass" | md5
pgrep -u w | grep ssh| awk '{print $1}' ssh
grep --exclude=*.o -rnw '/path/to/somewhere/' -e "pattern"
find . -type f -size +2G
find . ! -path "*/test/*" -type f -name "*.js" ! -name "*-min-*" ! -name "*console*"
find . -name "*.db" -type f | while read file ; do sqlite3 $file "SELECT * FROM table WHERE column1='value'" | grep value ; if [ $? -eq 0 ] ; then echo $file ; fi done
cat /var/run/dmesg.boot | grep Features
find lpi104-6 research/lpi104-6 -lname "*file1"
find . -type l | xargs ls -ld
find . -type d -name bin | cut -d/ -f1,2 | sort > b
find . -writable
ln -sf "$f" "~/my-existing-links/$(basename $f)"
ln -sfvn source target
stat -f 'File: %N Modified: %t%Sm' t* |column -t
column -t -s' ' filename
basename $0
fg 1
find . -mtime -1 | xargs tar --no-recursion -czf myfile.tgz
find . -mtime 30 -print
host $(uname -n) | grep "IPv6 address" | head -n 1 | awk '{print $5}'
/sbin/ifconfig $(netstat -nr | tail -1 | awk '{print $NF}') | awk -F: '/inet /{print $2}' | cut -f1 -d ' '
sudo su - jenkins
yum install firefox
yum -y groupinstall "Development Tools"
yum -y groupinstall "MYSQL Database Client"
ssh -v -Y phil@192.168.0.14 -p 222
ssh -Y $ssh_user@$ssh_server
find  / -type d -name "apt" -ls
echo "0a.00.1 usb controller some text device 4dc9" | rev | cut -b1-4 | rev
echo "abc-def-ghi-jkl" | rev | cut -d- -f-2 | rev
find /proc -user myuser -maxdepth 1 -type d -mtime +7 -exec basename {} \; | xargs kill -9
find /home/user/Desktop -name '*.pdf'
find /ghi /jkl -type f -name abc.def 2> /dev/null -exec grep -H ^# {} \;
find . -ls -name "*.ksh"
ls -d */
sudo env |grep USER
ls -alrt `pwd`/*
find . -ls > /tmp/files.txt
find . -print0 | grep --null 'FooBar' | xargs -0
find -newermt "mar 03, 2010" -ls
find . -type d -name proc -prune -o -name '*.js'
find . -type f -exec ls -l '{}' \;
find $directory -type f -name '*'
find -name '*.class' -printf '%h\n' | sort -u
find /ghi /jkl -type f -name abc.def 2> /dev/null -exec ls {} \; -exec cat {} \;
cat <(ls 1 | sort -u) <(ls 2 | sort -u) | uniq -d
tree -L 2
sync --list-only --include "*2012*.xml" -exclude "*.xml" serveripaddress::pt/dir/files/ --port=111 | awk '{ $1=$2=$3=$4=""; print substr($0,5); }' >output.txt
find . \( -name '*.txt'  -mtime +5 -o -name '*.html' \) -print0
find . -name "*.csv" -print0
find . -type f -name "*.csv"
find . -user my_user -perm -u+rwx
ssh -i ~/path/mykeypair.pem ubuntu@ec2-XX-XXX-XXX-XXX.us-west-2.compute.amazonaws.com
su - YOUR_USER
ssh -q $HOST "[[ ! -f $FILE_PATH ]] && touch $FILE_PATH"
find  / -name "[a-j]*" -print
mkdir /tmp/googleTestMock
mkdir aaa/bbb
cat FileWithColumnOfNumbers.txt | xargs ruby -e "puts ARGV.map(&:to_i).inject(&:+)"
cat file.txt | xargs  | sed -e 's/\ /+/g' | bc
sort --merge file*.txt | split -l 100000 - sorted_file
sort -m _tmp* -o data.tsv.sorted
mount /path/to/device /path/to/mount/location -o loop
sudo mount /dev/xvdf1 /vol -t ext4
mount -t ntfs-3g /dev/mapper/myvolume /media/volume
sudo mount -o loop /dev/loop0 test
mv -f file.txt /var/lib/docker/devicemapper/mnt/$CONTAINER_ID/rootfs/root/file.txt
find /path/to/folders/* -type d  -exec mv {} {}.mbox \; -exec mkdir {}.mbox/Messages \; -exec sh -c "mv {}.mbox/*.emlx {}.mbox/Messages" \;
ssh -D1080 root@localhost -g
mate `which rails`
basename testFile.txt.1 .1
uniq -w12 -c file
join -t: selection2.txt selection1.txt
echo $(basename "$1")
command | less
lspci -v -v | less
xmllint example.xml --xpath "/config/*/@*" | sed "s| key|\nkey|g" | nl
scp -vp me@server:/location/files\*
ls | read var
for FILENAME in *; do mv $FILENAME Unix_$FILENAME; done
g++ omnitest.cpp -E | less
cat blah | perl -en '/\xCA\xFE\xBA\xBE/ && print "found"'
echo "hello world" | echo test=$(cat)
find -name file -exec echo '-exec is an action so an implicit -print is not applied' \;
if find "`echo "$some_dir"`" -maxdepth 0 -empty | read v; then echo "Empty dir"; else "Dir is NOT empty" fi
cat file | fold -w29
od -An -N2 -i /dev/random
sort ips.txt | uniq -c | sort -bgr
seq  -f "#" -s '' 10
find . -name *.code
head -$((${RANDOM} % `wc -l < file` + 1)) file | tail -1
seq 1 10 | sort -R | tee /tmp/lst |cat <(cat /tmp/lst) <(echo '-------') | tac
find -name '*.jpg' | sort -n
find `pwd` -maxdepth 1
find ... -print0
comm -12 <(grep -rl word1 . | sort) <(grep -rl word2 . | sort)
find / -size +1000 -mtime +30 -exec ls -l {} \;
getent group | cut -d: -f1
cat $1.tmp | sort -u
echo -e "ALERT - Shell Access on:' `date` `who` '\n\n' `whois $(who | cut -d'(' -f2 | cut -d')' -f1)`"
echo "$(comm -12 <(echo "$a" | fold -w1 | sort | uniq) <(echo "$b" | fold -w1 | sort | uniq) | tr -d '\n')"
cat n
cat /dev/urandom | tr -dc '. ' | fold -w 100
cal -h
set -o
echo -n $(pwd)
join -v 1 <(sort file1) <(sort file2)
finger -l | grep "Name:" | tr -s ' ' | cut -d " " -f 2,4- | sort | uniq
ls -l `which passwd`
df .
head -c -N file.txt
git log --pretty=format: --name-only | grep .cs$ | sort | uniq -c | sort -rg | head -20
head -c N file.txt
cat -v /dev/urandom
echo $(readlink -f /dev/disk/by-uuid/$1) is not mounted
date -d @$(git log -n1 --format="%at") +%Y%m%d%H%M
echo Hello world | od -t x1 -t c
echo "a b c d e" | tr ' ' '\n' | tail -1
perl -ne 'print length()."  line $.  $_"' myfile | sort -nr | head -n 1
grep -v 'pattern' filename
comm -23 <(sort a.txt) <(sort b.txt)
cat <(grep -vxF -f set1 set2) <(grep -vxF -f set2 set1)
wc `find | grep .php$`
find . \( -name . -o -prune \)
find . | egrep -v "(exclude3|exclude4)" | sort
dig @"127.0.0.1"  _etcd-client._tcp. SRV
$ ls -Fltr
ps -e -orss=,args= | sort -nr | head
ls -1tr * | tail -1
df --output=target "$path" | tail -1
find /usr/src -name '*.c' -size +100k -print
find . -perm -o+w,+s
df -h $path | cut -f 1 -d " " | tail -1
find . -name "*.txt" -printf "%T@ %p\n" | sort | tail -1
find . -name \*.java | tr '\n' '\0' | xargs -0 wc
n_jobs=`expr $(jobs | wc -l)`
cat file1.txt | grep -Fvf file2.txt | grep '^Q'
wc -l $f | tr -s ' ' | cut -d ' ' -f 1
rpm -qfi `which ldconfig`
pstree -p $$
pstree -apl
echo $string | cut -d';' -f2
find /myprojects -type f -name '*.cpp' -print0 |    xargs -0 echo sed -i 's/previousword/newword/g'
getent group | cut -d: -f1 | sort
diff -q <(sort set1 | uniq) <(sort set2 | uniq)
diff PATH1/ PATH2/ -rq -X file1
find xargstest/ -name 'file??' | xargs myscript.sh
read REPLY\?"This is the question I want to ask?"
read -r -p "About to delete all items from history that match \"$param\". Are you sure? [y/N] " response
read -p "$1 " yn
read -p "Are you sure you wish to continue?"
read -n1 -r -p "Press any key to continue..." key
read -t5 -n1 -r -p 'Press any key in the next five seconds...' key
read line
IFS=$'\n' read -d '' -ra files < <(find /foo -name "*.txt")
bind '"\eY": "\e2\e."'
cat f.html | grep -o \
chmod -R +xr directory
mount --rbind /sys /var/snmp3/sys
chgrp -R repogroup .
gzip -kr .
rsync -rvv /path/to/data/myappdata user@host:/remote/path/to/data/myappdata
cp * .hiddendir -R
rsync -auv -e ssh --progress sourcedir/ user@dest.com:/dest/dir/
grep -rnw `pwd` -e "pattern"
rsync -rvz --progress --remove-sent-files ./dir user@host:/path
{ time find / 2>/dev/null; } 2>time.txt
find .  -name '*.txt' -exec rsync -R {} path/to/dext \;
mount -n -o remount /
mount -o remount,rw -t yaffs2 /dev/block/mtdblock3 /system
sudo mount -i -o remount,suid /home/evgeny
mount /media/Working/ -oremount,umask=000
echo -e "test1\ntest2\ntest3" |tr -d '\n' |grep "test1.*test3"
find /home -type f -name "*.ext" -exec perl -pi -e 's/\r//g' {} \;
find . -name "*.swp" -print0|xargs -0 rm
find dir -name \*~ | xargs echo rm | ksh -s
find -name "*\ *.txt" | xargs rm
find /usr -name core -atime +7 -exec rm "{}" \;
find . | grep -v "excluded files criteria" | xargs rm
find -exec rm '{}' +
find /home/peter -name no-such-thing* |xargs rm
find . -type f -newermt "Aug 10" ! -newermt "Aug 17" -exec rm {} \;
find /tmp -type f -name '*' -mtime +7 -print0 | xargs -0 rm -f
tr -d ' '
ls | xargs rmdir
finger | colrm 34 39
ls -1|grep -v -e ddl -e docs| xargs rm -rf
rename -v 's#/file##' v_{1,2,3}/file.txt
mv file001abc.txt abc1.txt
ls *.html | xargs -I {} sh -c 'mv $1 `basename $1 .html`.txt' - {}
find . -name '*.jpg' -execdir bash -c 'd="${PWD##*/}"; [[ "$1" != "$d-"* ]] && mv "$1" "./$d-$1"' - '{}' \;
find . -type f -inum 31467125 -exec mv {} new_name.html \;
find -name "*.txt" -exec mv {} `basename {} .htm`.html \;
echo -e "length(FOO_NO_WHITESPACE)==$(echo -ne "${FOO_NO_WHITESPACE}" | wc -m)"
df .
df -k /dir/inner_dir/
{ time sleep 1 2> sleep.stderr ; } 2> time.txt
{ time sleep 1 ; } 2> time.txt
ssh -O exit otherHosttunnel
find . -type d -printf '%d:%p\n' | sort -n | tail -1
find . ! -path '*bar*' -print
tac filename | perl -lane 'print join(" ", reverse(@F))'
cat ${TMP}/${SCRIPT_NAME}.name|sort -r;
CC=$(which cc) ./configure
mpv --no-audio \`ls ~/Down/other/*.{mp4,flv} --color=never\`
env `cat xxxx` otherscript.sh
su - jetty -c sh runProgram.sh
( cd /tmp; mycommand )
node -pe 'JSON.parse(process.argv[1]).foo' "$(cat foobar.json)"
find . -name core -ok rm {} \;
cat ~/.bashrc | pbcopy
CDATE=$(date "+%Y-%m-%d %H:%M:%S")
subnet=$(hostname -i | cut -d. -f1,2,3)
RM=`which rm`
TR=`which tr`
foo=`which ~/f`
ver=`echo -ne "$1\n$2" |sort -Vr |head -n1`
find . -name '*2011*' -print0 > /tmp/allfiles
find . -type f -mtime -14 -printf '%f\n' > deploy.txt
cnt=`ps -ef| tee log | grep "cntps"|grep -v "grep" | wc -l`
candidates=$(which -a $cmd | wc -l)
big_lines=`cat foo.txt | grep -c "$expression"`
END_ABS=`pwd -P`
hostname=`hostname -s`
grep -of ignore.txt input.txt | sort | uniq -c
find /Path -name "file_name*"
find /Path \( -path "/Path/bar*" -o -path "/Path/foo* \) -name "file_name*"
find /media/shared \( -iname "*.mp3" -o -iname "*.ogg" \)
find /tmp -regex ".*file[0-9]+$"
find /usr/local -type d -name '*[0-9]'
find . -name "*.c" -exec grep -i "keyword" {} ";"
find . \( -name '*.svn*' -prune  -o ! -name '*.html' \) | xargs -d '\n' grep -Hd skip 'SearchString'
yum search zsh
yum search mysql | grep client
find . -name '*.pdf' -print
find \( -name 'messages.*' ! -path "*/.svn/*" ! -path "*/CVS/*" \) -exec grep -Iw uint {} +
find . -type f -exec grep -l 'string' {} \;
find . -iname *.mov
find . type -f -amin -2
find . type -f -mtime +2
find . -name ".aux"
find . -name .vendor -prune -o -name '*.rb' -print
find . -name test -print
find . -iname "*needle*"
find ~/dir_data -type f  -exec chmod a-x,u+w {} \;
find /path/to/check/* -maxdepth 0 -type f
find /usr/local/man /opt/local/man -name 'my*'
cat file | grep pattern | paste -sd' '
( find . -iname "dl-aster-full-20131102*" -exec grep "Processed Files" {} \;) | cut -d":" -f2
find dir1 dir2 dir3 -type f -name "*.java" -exec grep -il 'foo' {} \;
find . | grep 'some string' | grep js
find ./ -not -path "*/node_modules/*" -name "*.js" | xargs grep keyword
find . -name '*.txt' -exec grep 'sometext' '{}' \; -print
find . -name “*.[txt|TXT]” -print | xargs grep “specific string”
find -name "*pattern*"
find . -type f -exec grep some_string {} \;
find /home -type d -empty
find -type d -printf '%d\t%P\n' | sort -r -nk1 | cut -f2-
find . -name "file2015-0*" | head -400 | xargs -I filename mv  filename
find . -name '*-GHBAG-*' -exec bash -c 'echo mv $0 ${0/GHBAG/stream-agg}' {} \;
find / \( -perm 2000 -o -perm 4000 \) -print | diff - files.secure
find /data/images -type f -newer /tmp/start -not -newer /tmp/end
find /data/images -type f -newer /tmp/start -not -newer /tmp/end > output.txt
$ find . -name "*mp3" -print0 | xargs -0 mid3iconv -e EUR-KR -d
find /home/mine -iname "*.png" -exec sh -c 'cp $0 /home/mine/pngcoppies/copy/$0' {} \;
find . -type f -name "*.scala" -exec grep -B5 -A10 'null' {} \;
find . -print | xargs grep -l -i "PATTERN"
find / -name mysql -type d
find / -name 'secret.keys' -print 2>/dev/null
find /var/log/ -iname anaconda.* -exec tar -cvf file.tar {} \;
find / -type f -size +20M -exec ls -lh {} \; 2> /dev/null | awk '{ print $NF ": " $5 }'
find /work -name 'memo*' -user ann -print
find . -name "*.log" -exec egrep -l '^ERROR' {} \;
find / -type f -iname "Dateiname"
find /mycool/project/ -type f -name "*.py" -print0 | xargs -I {} -0 grep -H --color "methodNameHere" "{}"
find $HOME/html/andrews-corner -exec grep -q 'slrn' '{}' \; -print
find /  -links 2 -print
find . -type f -exec grep -n "stuff" {} \; -print
find /usr /home -name Chapter1.txt -type f
top -b -n 1 | mail -s "any subject" your_email@domain.com
curl -X GET -H "Authorization: Token wef4fwef54te4t5teerdfgghrtgdg53" http://testsite/api/ | python -mjson.tool
kill -HUP $( cat /var/run/nginx.pid )
kill $(pgrep 'python csp_build.py')
alias devn='cat > /dev/null'
alias go='GOPATH=$(infer-gopath.sh) go'
alias my_command="$oldalias --fail-if-command-contains=$bad_string"
alias prettify_json=php -E '$o = json_decode($argn); print json_encode($o, JSON_PRETTY_PRINT);'
alias pwd='echo -n `pwd` | pbcopy'
alias unix='echo $(date +%s)'
IFS= read -r line
find foldername -type d -exec chmod 755 {} ";"
find /opt/lampp/htdocs -type d -exec chmod 755 {} \;
sudo chmod 755 $(which node)
touch -r A B
touch -d"$(date --date="@$old_time")" B
path=$(basename $(pwd) | tr 'A-Z' 'a-z' )
find ~/src -type f \( -iname '*.cpp' -or -iname '*.h' -or -iname '*.c' -or -iname '*.hpp' \) -exec echo {} \;
find /etc -mtime -1
env | uniq | sort -r | grep PATH
date -ud@0
tmux show-options -g
echo "$list" | uniq -c
sort -k1,1 -k2,2 -t';' --stable --unique some_data
find / -type f -printf "\n%Ab %p" | head -n 11 | sort -k1M
sort -u FILE
split -l 100 "$SOURCE_FILE"
split -b 1024k <file_name>
split -l5000000 data.tsv '_tmp';
tar czf - www|split -b 1073741824 - www-backup.tar.
split --lines=75
echo $(basename $(dirname $pathname))
[[ ! -z `find 'YOUR_DIR/' -name 'something'` ]] && echo "found" || echo "not found"
cat dbdump.sql.gz | gzip -cd | mysql
unset DISPLAY
gzip -d --stdout file.gz | bash -s -- "-n wordpress localhost"
zcat small-*.gz | split -d -l2000000 -a 3 - large_
cat www-backup.tar.*|gunzip -c |tar xvf -
source <(metaflac --show-tag ARTIST myfile.flac)
nohup php -r 'while (true) { echo "a";}' &
bzip2 -kv */*/*/*/*
bzip2 -kv */*/*/*/*/*/*
inotifywait -e attrib target-directory
echo 127.0.0.1 ad.doubleclick.net | sudo tee -a /etc/hosts
echo -e "\n/usr/local/boost_1_54_0/stage/lib" | sudo tee -a /etc/ld.so.conf
command | tee -a /path/to/logfile